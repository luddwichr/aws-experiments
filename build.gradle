buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath('io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation(platform('com.amazonaws:aws-java-sdk-bom:1.11.917'))
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.6.0'
    implementation 'com.amazonaws:aws-java-sdk-lambda'
    implementation 'com.amazonaws:aws-java-sdk-s3'
    implementation 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
    annotationProcessor 'org.apache.logging.log4j:log4j-core:2.14.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.0'

    testImplementation(platform('org.junit:junit-bom:5.7.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation 'org.assertj:assertj-core:3.18.1'
    testImplementation 'org.mockito:mockito-core:3.6.28'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.28'
    testImplementation 'cloud.localstack:localstack-utils:0.2.5'
}

test {
    useJUnitPlatform()
}

task buildZip(type: Zip) {
    archiveFileName = 'demoLambda.zip'
    from compileJava
    from processResources
    into('lib') {
        from configurations.compileClasspath
    }
}